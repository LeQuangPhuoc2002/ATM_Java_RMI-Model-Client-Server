
import com.sun.glass.events.KeyEvent;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author admin
 */
public class FrmChuyenKhoan extends javax.swing.JFrame {

    private JTextField selectedTextField;

    SharedVariables sharedVariables = new SharedVariables();
    String nguoiNhan = null;

    public void chuyenkhoan(long stkchuyen, long stkNhan, long sotienchuyen) {
        try {
            ITinhToan server = ServerUtility.getServerInstance();
            selectedTextField = null;
            int rs = server.ChuyenKhoan(stkchuyen, stkNhan, sotienchuyen);
            switch (rs) {
                case 1:
                    this.dispose();
                    FrmConfirm f = new FrmConfirm();
                    f.setVisible(true);
                    break;
                case -1:
                    txtloi.setText("Có lỗi vui lòng thử lại");
                    break;
                case -2:
                    txtloi.setText("Không ghi được lịch sử giao dịch");
                    break;
                case -3:
                    txtloi.setText("Số dư không đủ để thực hiện giao dịch, duy trì mức tối thiểu 50,000");
                    txtTienChuyen.requestFocusInWindow();
                    break;
                case -5:
                    txtloi.setText("Chuyển tối đa 500,000,000/ngày");
                    txtTienChuyen.requestFocusInWindow();
                    break;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void run() {
        try {
            String strTk = stknhan.getText();
            long stkNhan = 0;
            try {
                stkNhan = Long.parseLong(strTk);
                if (stkNhan != SharedVariables.stk) {
                    try {
                        ITinhToan server = ServerUtility.getServerInstance();
                        if (server.timKiemNguoiNhan(stkNhan) != null) { // Tìm thấy số tài khoản nhận
                            if (server.GetStatus(stkNhan) != -1) {
                                nguoiNhan = server.timKiemNguoiNhan(stkNhan);
                                txtHoTen.setText(nguoiNhan);
                                String txtsoTien = txtTienChuyen.getText().trim().replaceAll(",", "");
                                if (!txtsoTien.isEmpty()) {
                                    try {
                                        long soTien = Long.valueOf(txtsoTien);
                                        if (soTien >= 10000 && soTien <= 50000000) {
                                            chuyenkhoan(SharedVariables.stk, Long.parseLong(stknhan.getText()), soTien);
                                        } else if (soTien > 50000000) {
                                            txtloi.setText("Chuyển tối đa 50,000,000/lần");
                                        } else {
                                            txtloi.setText("Chuyển ít nhất 10,000/lần");
                                        }
                                    } catch (Exception e) {
                                        txtloi.setText("Số tiền chuyển chưa đúng");
                                        e.printStackTrace();
                                    }
                                }
                            } else {
                                System.out.println("hello");
                                txtloi.setText("Tài khoản " + stkNhan + " đã bị khóa");
                            }
                        } else {
                            txtHoTen.setText("Không tìm thấy người nhận");
                        }
                    } catch (Exception e) {
                        System.out.println("Loi o day ne");
                        e.printStackTrace();
                    }
                } else {
                    txtHoTen.setText(SharedVariables.tendn);
                    txtloi.setText("Hãy nhập tài khoản khác");
                }
            } catch (NumberFormatException e) {
                txtHoTen.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public FrmChuyenKhoan() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ck = new javax.swing.JButton();
        t = new javax.swing.JButton();
        ht = new javax.swing.JLabel();
        txtErr = new javax.swing.JLabel();
        txtError = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtHoTen1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtloi = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        stknhan = new javax.swing.JTextField();
        txtTienChuyen = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 51));

        ck.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckActionPerformed(evt);
            }
        });

        t.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });

        txtErr.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        txtErr.setForeground(new java.awt.Color(255, 0, 51));

        txtError.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        txtError.setForeground(new java.awt.Color(255, 0, 51));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("SP BANK");

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel8.setText("VND");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Chuyển khoản");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel10.setText("Xin chào:");

        txtHoTen1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        txtHoTen1.setText("Họ và Tên");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel11.setText("VNĐ");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel12.setText("Nhập số tiền chuyển:");

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("CHUYỂN TIỀN >");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("THOÁT >");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel16.setText("Thông báo hệ thống:");

        txtloi.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtloi.setForeground(new java.awt.Color(255, 0, 51));
        txtloi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtloi.setText("txtloi");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel5.setText("Họ và Tên người nhận: ");

        txtHoTen.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txtHoTen.setText("NULL");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel2.setText("Nhập số tài khoản nhận:");

        stknhan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        stknhan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stknhanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stknhanFocusLost(evt);
            }
        });
        stknhan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stknhanKeyPressed(evt);
            }
        });

        txtTienChuyen.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtTienChuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienChuyenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienChuyenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTienChuyenKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtHoTen1)
                                .addGap(1963, 1963, 1963))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(890, 890, 890)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(287, 287, 287)))
                        .addComponent(jLabel8))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 1225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel16)))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtloi, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtHoTen)
                                            .addComponent(stknhan, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                                            .addComponent(txtTienChuyen))
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(57, 57, 57)))
                        .addComponent(jLabel6)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtHoTen1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stknhan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtHoTen))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel8)
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTienChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtloi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton14.setText("ENTER");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setText("CANCEL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton13.setText("CLEAR");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton10.setText("5");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton11.setText("6");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton12.setText("4");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton15.setText("2");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton16.setText("3");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton17.setText("1");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton18.setText("0");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton19.setText("8");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1154, 1154, 1154)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addComponent(txtErr)
                                        .addGap(430, 430, 430)
                                        .addComponent(ht))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(168, 168, 168)
                                            .addComponent(txtError))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(616, 616, 616)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(30, 30, 30)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(30, 30, 30)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(37, 37, 37)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(73, 73, 73)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ck, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(562, 562, 562)
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(ht))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(ck, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtErr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtError)
                .addGap(93, 93, 93))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
        // TODO add your handling code here:
        this.dispose();//hủy Frame: FrmDangNhap
        FrmClient f = new FrmClient();
        f.setVisible(true);//Mở form: drmClient
    }//GEN-LAST:event_tActionPerformed

    private void ckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckActionPerformed
        try {
            if (stknhan.getText().length() == 0) {
                txtloi.setText("Vui lòng nhập số tài khoản người nhận");
                selectedTextField = stknhan;
                stknhan.requestFocusInWindow();
                System.out.println("zo");
            } else {
                System.out.println("ra");
                run();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ckActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        txtHoTen1.setText(SharedVariables.tendn);
        txtloi.setText("");
        selectedTextField = stknhan;
        stknhan.requestFocusInWindow();
        if (SharedVariables.stk != 0) {
            try {
                run();
            } catch (Exception tt) {
                System.out.print(tt);
            }
        } else {
            SharedVariables.tendn = "";
            SharedVariables.stk = 0;
            this.dispose();//hủy Frame: FrmDangNhap
            FrmDangNhap f = new FrmDangNhap();
            f.setVisible(true);//Mở form: drmClient
        }

    }//GEN-LAST:event_formWindowOpened

    private void stknhanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stknhanFocusLost
        try {
            run();
            if (selectedTextField == stknhan) {
                txtHoTen.setText("");
                txtloi.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_stknhanFocusLost

    private void stknhanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stknhanFocusGained
        // TODO add your handling code here:
       if(stknhan.getText().length() > 0 || txtHoTen.getText().length() > 0 || txtTienChuyen.getText().length() > 0 || (txtloi.getText().length() > 0 && txtloi.getText() != "Vui lòng nhập số tài khoản người nhận")) {
            txtHoTen.setText("");
            txtTienChuyen.setText("");
            txtloi.setText("");
        } else {
            txtHoTen.setText("");
            txtTienChuyen.setText("");
        }
//        if (txtHoTen.getText().length() == 0 || txtTienChuyen.getText().length() == 0) {
//            txtHoTen.setText("");
//            txtTienChuyen.setText("");
//        } else {
//            txtHoTen.setText("");
//            txtTienChuyen.setText("");
//            txtloi.setText("");
//        }
//        if (txtloi.getText().contains("đã bị khóa")) {
//            txtloi.setText("");
//        }
    }//GEN-LAST:event_stknhanFocusGained

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (selectedTextField == stknhan) {
            if (stknhan.getText().length() < 8) {
                txtloi.setText("Hãy nhập số tài khoản hợp lệ");
            } else {
                txtTienChuyen.requestFocusInWindow();
                selectedTextField = txtTienChuyen;
                run();
            }
        } else if (selectedTextField == txtTienChuyen) {
            stknhan.requestFocusInWindow();
            selectedTextField = stknhan;
            stknhan.setText("");
            txtTienChuyen.setText("");
        } else {
            selectedTextField = stknhan;
            stknhan.requestFocusInWindow();
            stknhan.setText("");
            txtTienChuyen.setText("");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try {
            SharedVariables.tendn = "";
            ITinhToan server = ServerUtility.getServerInstance();
            server.DangXuat(SharedVariables.stk);
            SharedVariables.stk = 0;
            this.dispose();//hủy Frame: FrmDangNhap
            FrmDangNhap f = new FrmDangNhap();
            f.setVisible(true);//Mở form: drmClient
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Lấy văn bản hiện tại từ JTextField
            String currentText = selectedTextField.getText();

            // Xóa một ký tự cuối cùng từ chuỗi
            if (currentText.length() > 0) {
                currentText = currentText.substring(0, currentText.length() - 1);
            }

            // Cập nhật JTextField với chuỗi mới
            selectedTextField.setText(currentText);
        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {
            // Lấy văn bản hiện tại từ JTextField
            String currentText = selectedTextField.getText();

            // Chuyển đổi chuỗi thành số (loại bỏ dấu phẩy ngăn cách nghìn)
            currentText = currentText.replaceAll(",", "");

            // Xóa một ký tự cuối cùng từ chuỗi
            if (currentText.length() > 0) {
                currentText = currentText.substring(0, currentText.length() - 1);
            }

            // Định dạng lại số và cập nhật JTextField với chuỗi mới
            try {
                double value = Double.parseDouble(currentText);
                selectedTextField.setText(String.format("%,.0f", value));
            } catch (NumberFormatException e) {
                // Xử lý nếu không thể chuyển đổi thành số
                selectedTextField.setText("0");
            }
        }

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "7");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "7";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "9");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "9";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "5");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "5";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "6");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "6";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "4");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "4";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "2");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "2";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "3");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "3";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "1");
            }
        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "1";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "0");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "0";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        if (selectedTextField != null && selectedTextField == stknhan) {
            // Thêm số 9 vào nội dung hiện tại của ô văn bản được chọn
            String currentText = selectedTextField.getText();

            if (currentText.length() < 8) {
                selectedTextField.setText(currentText + "8");
            }

        } else if (selectedTextField != null && selectedTextField == txtTienChuyen) {

            DecimalFormat decimalFormat = new DecimalFormat("#,##0");

            // Lấy văn bản hiện tại từ JTextField
            String currentText = txtTienChuyen.getText();

            // Xóa dấu phẩy khỏi chuỗi trước khi chuyển đổi
            currentText = currentText.replace(",", "");

            // Thêm "7" vào cuối chuỗi
            if (currentText.length() < 8) {
                currentText += "8";
            }

            try {
                // Chuyển đổi chuỗi thành số nguyên
                long number = Long.parseLong(currentText);

                // Định dạng số nguyên và cập nhật JTextField
                selectedTextField.setText(decimalFormat.format(number));

                // In kết quả
                System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
            } catch (NumberFormatException e) {
                // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
                System.err.println("Lỗi NumberFormatException: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void stknhanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stknhanKeyPressed
        // TODO add your handling code here:
        String matkhau = String.valueOf(stknhan.getText());
        int lengthMatKhau = matkhau.length();
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            if (lengthMatKhau < 8) {
                stknhan.setEditable(true);
            } else {
                stknhan.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                stknhan.setEditable(true);
            } else {
                stknhan.setEditable(false);
            }
        }
    }//GEN-LAST:event_stknhanKeyPressed

    private void txtTienChuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienChuyenKeyPressed

    }//GEN-LAST:event_txtTienChuyenKeyPressed

    private void txtTienChuyenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienChuyenKeyTyped
        // TODO add your handling code here:
        String matkhau = String.valueOf(txtTienChuyen.getText());
        int lengthMatKhau = matkhau.length();
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            if (lengthMatKhau < 9) {
                // Nếu là số và độ dài chuỗi dưới 8, cho phép thêm vào
            } else {
                // Nếu độ dài đã đạt 8, không cho phép thêm vào
                evt.consume(); // Ngăn chặn ký tự được hiển thị
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                // Cho phép xóa ký tự nếu là Backspace hoặc Delete
            } else {
                // Không cho phép nhập ký tự khác số
                evt.consume(); // Ngăn chặn ký tự được hiển thị
            }
        }

        // Định dạng số và cập nhật JTextField
        DecimalFormat decimalFormat = new DecimalFormat("#,##0");
        try {
            // Chuyển đổi chuỗi thành số nguyên
            long number = Long.parseLong(txtTienChuyen.getText().replace(",", ""));

            // Định dạng số nguyên và cập nhật JTextField
            txtTienChuyen.setText(decimalFormat.format(number));

            // In kết quả
            System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
        } catch (NumberFormatException e) {
            // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
            System.err.println("Lỗi NumberFormatException: " + e.getMessage());
        }
    }//GEN-LAST:event_txtTienChuyenKeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            SharedVariables.tendn = "";
            ITinhToan server = ServerUtility.getServerInstance();
            server.DangXuat(SharedVariables.stk);
            SharedVariables.stk = 0;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void txtTienChuyenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienChuyenKeyReleased
        // TODO add your handling code here:
        String matkhau = String.valueOf(txtTienChuyen.getText());
        int lengthMatKhau = matkhau.length();
        char c = evt.getKeyChar();

        if (Character.isDigit(c)) {
            if (lengthMatKhau < 9) {
                // Nếu là số và độ dài chuỗi dưới 8, cho phép thêm vào
            } else {
                // Nếu độ dài đã đạt 8, không cho phép thêm vào
                evt.consume(); // Ngăn chặn ký tự được hiển thị
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                // Cho phép xóa ký tự nếu là Backspace hoặc Delete
            } else {
                // Không cho phép nhập ký tự khác số
                evt.consume(); // Ngăn chặn ký tự được hiển thị
            }
        }

        // Định dạng số và cập nhật JTextField
        DecimalFormat decimalFormat = new DecimalFormat("#,##0");
        try {
            // Chuyển đổi chuỗi thành số nguyên
            long number = Long.parseLong(txtTienChuyen.getText().replace(",", ""));

            // Định dạng số nguyên và cập nhật JTextField
            txtTienChuyen.setText(decimalFormat.format(number));

            // In kết quả
            System.out.println("Số sau khi định dạng: " + decimalFormat.format(number));
        } catch (NumberFormatException e) {
            // Xử lý lỗi nếu chuỗi không thể chuyển đổi thành số
            System.err.println("Lỗi NumberFormatException: " + e.getMessage());
        }
    }//GEN-LAST:event_txtTienChuyenKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmChuyenKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmChuyenKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmChuyenKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmChuyenKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmChuyenKhoan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ck;
    private javax.swing.JLabel ht;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField stknhan;
    private javax.swing.JButton t;
    private javax.swing.JLabel txtErr;
    private javax.swing.JLabel txtError;
    private javax.swing.JLabel txtHoTen;
    private javax.swing.JLabel txtHoTen1;
    private javax.swing.JTextField txtTienChuyen;
    private javax.swing.JLabel txtloi;
    // End of variables declaration//GEN-END:variables
}
